package gym;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author user
 */

class BaseMembersForm extends javax.swing.JFrame {
    Connection con;
    PreparedStatement pst;
    DefaultTableModel df;
}

public class Members extends BaseMembersForm {

    /**
     * Creates new form Members
     */
    public Members() {
        initComponents();
        connectToDatabase();
        loadTableData();
        load_trainer();
        addDocumentListener(txtmamount);
        addDocumentListener(txtsamount);
        addDocumentListener(txttamount);
        java.util.Date currentDate = new java.util.Date();
        txtstart.setDate(currentDate);
        addDocumentListenerForValidation(txtfname, txtfnameinvalid);
        addDocumentListenerForValidation(txtlname, txtlnameinvalid);
        addDocumentListenerForValidation(txtmobile, txtmobileinvalid);
    }
    
    
    private void connectToDatabase() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/gymregistration", "root", "");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Members.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void loadTableData() {
    try {
        pst = con.prepareStatement("select * from member");
        ResultSet rs = pst.executeQuery();

        ResultSetMetaData rd = rs.getMetaData();
        int c;
        c = rd.getColumnCount();
        df = (DefaultTableModel) jTable1.getModel();
        df.setRowCount(0);
        while (rs.next()) {
            Vector v2 = new Vector();

            for (int i = 1; i <= c; i++) {
                v2.add(rs.getString("id"));
                v2.add(rs.getString("fname"));
                v2.add(rs.getString("lname"));
                v2.add(rs.getString("dob"));
                v2.add(rs.getString("gender"));
                v2.add(rs.getString("address"));
                v2.add(rs.getString("mobile"));
                v2.add(rs.getString("discount"));
                v2.add(rs.getString("memfee"));
                v2.add(rs.getString("subs"));
                v2.add(rs.getString("tname"));
                v2.add(rs.getString("date"));
                v2.add(rs.getString("total"));
            }

            df.addRow(v2);
        }

    } catch (SQLException ex) {
        Logger.getLogger(Members.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    
    private void load_trainer() {
        
        try {
            pst = con.prepareStatement("select Distinct name from trainer");
             ResultSet rs;
             
             rs = pst.executeQuery();
             
             while(rs.next())
             {
                 txttrainer.addItem(rs.getString("name"));
             }
        
        
        } catch (SQLException ex) {
            Logger.getLogger(Members.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtfname = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtlname = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtgender = new javax.swing.JComboBox<>();
        txtaddress = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtmobile = new javax.swing.JTextField();
        txtsdiscount = new javax.swing.JComboBox<>();
        txtmfee = new javax.swing.JComboBox<>();
        txtsubs = new javax.swing.JComboBox<>();
        txttrainer = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txttotal = new javax.swing.JTextField();
        txttamount = new javax.swing.JTextField();
        txtsamount = new javax.swing.JTextField();
        txtmamount = new javax.swing.JTextField();
        txtlnameinvalid = new javax.swing.JLabel();
        txtfnameinvalid = new javax.swing.JLabel();
        txtmobileinvalid = new javax.swing.JLabel();
        txtdob = new com.toedter.calendar.JDateChooser();
        txtstart = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtfname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfnameActionPerformed(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("First Name:");

        txtlname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlnameActionPerformed(evt);
            }
        });

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Starting Date:");

        txtgender.setForeground(new java.awt.Color(255, 255, 255));
        txtgender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Prefer not to say" }));
        txtgender.setSelectedIndex(-1);
        txtgender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgenderActionPerformed(evt);
            }
        });

        txtaddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtaddressActionPerformed(evt);
            }
        });

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Last Name:");

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Birthday:");

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Trainer:");

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Subscription:");

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Membership:");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Student Discount:");

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Mobile:");

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Address:");

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Gender:");

        txtmobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmobileActionPerformed(evt);
            }
        });

        txtsdiscount.setForeground(new java.awt.Color(255, 255, 255));
        txtsdiscount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));
        txtsdiscount.setSelectedIndex(-1);
        txtsdiscount.setLightWeightPopupEnabled(false);
        txtsdiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsdiscountActionPerformed(evt);
            }
        });

        txtmfee.setForeground(new java.awt.Color(255, 255, 255));
        txtmfee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));
        txtmfee.setSelectedIndex(-1);
        txtmfee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmfeeActionPerformed(evt);
            }
        });

        txtsubs.setForeground(new java.awt.Color(255, 255, 255));
        txtsubs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Weekly", "Monthly", "Yearly" }));
        txtsubs.setSelectedIndex(-1);
        txtsubs.setFocusCycleRoot(true);
        txtsubs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsubsActionPerformed(evt);
            }
        });

        txttrainer.setForeground(new java.awt.Color(255, 255, 255));
        txttrainer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        txttrainer.setSelectedIndex(-1);
        txttrainer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttrainerActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Total Amount:");

        txttotal.setEditable(false);
        txttotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotalActionPerformed(evt);
            }
        });

        txttamount.setEditable(false);
        txttamount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttamountActionPerformed(evt);
            }
        });

        txtsamount.setEditable(false);
        txtsamount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsamountActionPerformed(evt);
            }
        });

        txtmamount.setEditable(false);
        txtmamount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmamountActionPerformed(evt);
            }
        });

        txtlnameinvalid.setBackground(new java.awt.Color(51, 51, 51));
        txtlnameinvalid.setForeground(java.awt.Color.red);

        txtfnameinvalid.setBackground(new java.awt.Color(51, 51, 51));
        txtfnameinvalid.setForeground(java.awt.Color.red);

        txtmobileinvalid.setBackground(new java.awt.Color(51, 51, 51));
        txtmobileinvalid.setForeground(java.awt.Color.red);

        txtdob.setBackground(java.awt.Color.darkGray);

        txtstart.setBackground(java.awt.Color.darkGray);
        txtstart.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel13)
                            .addComponent(jLabel2)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(jLabel18))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txttrainer, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtsubs, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtmfee, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtsdiscount, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtmobile, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtaddress, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtgender, javax.swing.GroupLayout.Alignment.LEADING, 0, 151, Short.MAX_VALUE)
                            .addComponent(txtlname, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfname, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtdob, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtstart, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtsamount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                        .addComponent(txttamount, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtmamount)
                        .addComponent(txtlnameinvalid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtfnameinvalid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtmobileinvalid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10))
                    .addComponent(txtfnameinvalid, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtlname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11))
                    .addComponent(txtlnameinvalid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(txtdob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtgender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtmobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15))
                    .addComponent(txtmobileinvalid, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtsdiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtmfee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(txtmamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsubs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(txtsamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txttrainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(txttamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtstart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 30, 400, 510);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51,80));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(null);

        jTable1.setBackground(new java.awt.Color(51, 51, 51));
        jTable1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First Name", "Last Name", "Birthday", "Gender", "Address", "Mobile", "Discount", "Membership", "Subscription", "Trainer", "Start", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
            jTable1.getColumnModel().getColumn(8).setResizable(false);
            jTable1.getColumnModel().getColumn(9).setResizable(false);
            jTable1.getColumnModel().getColumn(10).setResizable(false);
            jTable1.getColumnModel().getColumn(11).setResizable(false);
            jTable1.getColumnModel().getColumn(12).setResizable(false);
        }

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 110, 630, 390);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(410, 30, 650, 510);

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\OneDrive\\Documents\\image\\Untitled.png")); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(890, 20, 170, 110);

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(30, 560, 70, 30);

        jButton4.setBackground(new java.awt.Color(51, 51, 51));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Edit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(120, 560, 68, 30);

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Reset");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(210, 560, 70, 30);

        jButton5.setBackground(new java.awt.Color(51, 51, 51));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(300, 560, 70, 30);

        jButton3.setBackground(new java.awt.Color(51, 51, 51));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(390, 560, 70, 30);

        jLabel3.setBackground(new java.awt.Color(51, 51, 51));
        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\OneDrive\\Documents\\image\\—Pngtree—black and white gym room_3485114.jpg")); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 1071, 600);

        setSize(new java.awt.Dimension(1087, 639));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

private void addDocumentListenerForValidation(javax.swing.JTextField textField, javax.swing.JLabel validationLabel) {
    textField.getDocument().addDocumentListener(new DocumentListener() {
        @Override
        public void insertUpdate(DocumentEvent e) {
            validateField(textField, validationLabel);
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            validateField(textField, validationLabel);
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            validateField(textField, validationLabel);
        }
    });
}

private boolean isValidFirstName(String firstName) {
    return firstName.isEmpty() || firstName.matches("[A-Z][a-z]*");
}

private boolean isValidLastName(String lastName) {
    return lastName.isEmpty() || lastName.matches("[A-Z][a-z]*");
}

private boolean isValidMobile(String mobile) {
    return mobile.isEmpty() || (mobile.matches("[0-9]+") && mobile.length() == 11);
}

private void validateField(javax.swing.JTextField textField, javax.swing.JLabel validationLabel) {
    String text = textField.getText().trim();

    if (textField.equals(txtfname)) {
        if (isValidFirstName(text)) {
            validationLabel.setText(""); 
        } else {
            validationLabel.setText("Invalid"); 
        }
    } else if (textField.equals(txtlname)) {
        if (isValidLastName(text)) {
            validationLabel.setText("");
        } else {
            validationLabel.setText("Invalid"); 
        }
    } else if (textField.equals(txtmobile)) {
        if (isValidMobile(text)) {
            validationLabel.setText(""); 
        } else {
            validationLabel.setText("Invalid"); 
        }
    }
}

    
    private void addDocumentListener(javax.swing.JTextField textfield) {
        textfield.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateTotalAmount();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateTotalAmount();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateTotalAmount();
            }
        });
    }
    
   private void updateTotalAmount() {
        double mAmount = getNumericValue(txtmamount.getText());
        double sAmount = getNumericValue(txtsamount.getText());
        double tAmount = getNumericValue(txttamount.getText());

        double totalAmount = mAmount + sAmount + tAmount;
        
        txttotal.setText("₱" + (int) totalAmount);
    }
     
     private double getNumericValue(String text) {
    try {
        return Double.parseDouble(text.replaceAll("[^\\d.]", ""));
    } catch (NumberFormatException e) {
        return 0.0;
    }
}
    
     private void updateMAmount() {
    String selectedMfee = (String) txtmfee.getSelectedItem();
    String selectedDiscount = (String) txtsdiscount.getSelectedItem();

    double originalAmount = getOriginalMfeeAmount(selectedMfee);
    double discountedAmount = ("Yes".equals(selectedDiscount)) ? originalAmount - (originalAmount * 0.20) : originalAmount;

    // Convert discountedAmount to an integer to remove the ".0"
    txtmamount.setText("₱" + (int) discountedAmount);
    updateTotalAmount(); 
}

private void updateSAmount() {
    String selectedSubs = (String) txtsubs.getSelectedItem();
    String selectedDiscount = (String) txtsdiscount.getSelectedItem();

    double originalAmount = getOriginalSubsAmount(selectedSubs);
    double discountedAmount = ("Yes".equals(selectedDiscount)) ? originalAmount - (originalAmount * 0.20) : originalAmount;

    txtsamount.setText("₱" + (int) discountedAmount);
    updateTotalAmount(); 
}

private void updateTAmount() {
    String selectedTrainer = (String) txttrainer.getSelectedItem();
    String selectedDiscount = (String) txtsdiscount.getSelectedItem();

    double originalAmount = getOriginalTrainerAmount(selectedTrainer);
    double discountedAmount = ("Yes".equals(selectedDiscount)) ? originalAmount - (originalAmount * 0.20) : originalAmount;

    txttamount.setText("₱" + (int) discountedAmount);
    updateTotalAmount();
}

    
    private void txtfnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfnameActionPerformed

    private void txtlnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtlnameActionPerformed

    private void txtgenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtgenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtgenderActionPerformed

    private void txtaddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtaddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtaddressActionPerformed

    private void txtmobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmobileActionPerformed

    private void txtsdiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsdiscountActionPerformed
        // TODO add your handling code here:
        updateMAmount();
    updateSAmount();
    updateTAmount();
    updateTotalAmount();
    }//GEN-LAST:event_txtsdiscountActionPerformed

    private void txtmfeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmfeeActionPerformed
        // TODO add your handling code here:
        String selectedMfee = (String) txtmfee.getSelectedItem();
    String selectedDiscount = (String) txtsdiscount.getSelectedItem();

    double originalAmount = getOriginalMfeeAmount(selectedMfee);
    double discountedAmount = ("Yes".equals(selectedDiscount)) ? originalAmount - (originalAmount * 0.20) : originalAmount;

    txtmamount.setText("₱" + (int) discountedAmount);
    updateTotalAmount();
    }//GEN-LAST:event_txtmfeeActionPerformed

    private double getOriginalMfeeAmount(String selectedMfee) {
    if (selectedMfee != null) {
        switch (selectedMfee) {
            case "Yes":
                return 500;
            case "No":
                return 0;
            default:
                return 0;
        }
    } else {
        return 0;
    }
    }
    
    private void txtsubsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsubsActionPerformed
        // TODO add your handling code here:
        String selectedSubs = (String) txtsubs.getSelectedItem();
    String selectedDiscount = (String) txtsdiscount.getSelectedItem();

    double originalAmount = getOriginalSubsAmount(selectedSubs);
    double discountedAmount = ("Yes".equals(selectedDiscount)) ? originalAmount - (originalAmount * 0.20) : originalAmount;

   
    txtsamount.setText("₱" + (int) discountedAmount);
    updateTotalAmount();
    }//GEN-LAST:event_txtsubsActionPerformed
        
     private double getOriginalSubsAmount(String selectedSubs) {
        if (selectedSubs != null) {
    switch (selectedSubs) {
        case "Weekly":
            return 300;
        case "Monthly":
            return 800;
        case "Yearly":
            return 6000;
        default:
            return 0;
    } 
        }
        return 0;
     }
    
    private void txttrainerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttrainerActionPerformed
        // TODO add your handling code here:
        String selectedTrainer = (String) txttrainer.getSelectedItem();
    String selectedDiscount = (String) txtsdiscount.getSelectedItem();

    double originalAmount = getOriginalTrainerAmount(selectedTrainer);
    double discountedAmount = ("Yes".equals(selectedDiscount)) ? originalAmount - (originalAmount * 0.20) : originalAmount;
    
    txttamount.setText("₱" + (int) discountedAmount);
    updateTotalAmount();
    }//GEN-LAST:event_txttrainerActionPerformed

    private double getOriginalTrainerAmount(String selectedTrainer) {
            if (selectedTrainer != null && !selectedTrainer.equals("None")) {
      
        return 500;
    } else {

        return 0;
    }

    }
    private void txttotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttotalActionPerformed

    private void txttamountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttamountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttamountActionPerformed

    private void txtsamountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsamountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsamountActionPerformed

    private void txtmamountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmamountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmamountActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        try {
            df =(DefaultTableModel)jTable1.getModel();
            int selected = jTable1.getSelectedRow();
            
            int id = Integer.parseInt(df.getValueAt(selected, 0).toString());
            
            txtfname.setText(df.getValueAt(selected, 1).toString());
            txtlname.setText(df.getValueAt(selected, 2).toString());
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String)df.getValueAt(selected, 3));
            txtdob.setDate(date);
            txtgender.setSelectedItem(df.getValueAt(selected, 4).toString());
            txtaddress.setText(df.getValueAt(selected, 5).toString());
            txtmobile.setText(df.getValueAt(selected, 6).toString());
            txtsdiscount.setSelectedItem(df.getValueAt(selected, 7).toString());
            txtmfee.setSelectedItem(df.getValueAt(selected, 8).toString());
            txtsubs.setSelectedItem(df.getValueAt(selected, 9).toString());
            txttrainer.setSelectedItem(df.getValueAt(selected, 10).toString());
            Date startDate = new SimpleDateFormat("yyyy-MM-dd").parse((String)df.getValueAt(selected, 11));
            txtstart.setDate(startDate);
       
            jButton2.setEnabled(false);
            txtmfee.setEnabled(false);
            txtsubs.setEnabled(false);
       
        } catch (ParseException ex) {
            Logger.getLogger(Members.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void resetFields() {
    
    txtfname.setText("");
    txtlname.setText("");
    txtdob.setDate(null);
    txtgender.setSelectedItem(null);
    txtaddress.setText("");
    txtmobile.setText("");
    txtsdiscount.setSelectedItem(null);
    txtmfee.setSelectedItem(null);
    txtsubs.setSelectedItem(null);
    txttrainer.setSelectedItem(null);
    txtmamount.setText("");
    txtsamount.setText("");
    txttamount.setText("");
    txttotal.setText("");
    txtfnameinvalid.setText("");
    txtlnameinvalid.setText("");
    txtmobileinvalid.setText("");
    setCurrentDate();
        this.requestFocusInWindow();

        this.revalidate();
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      // TODO add your handling code here:
    String fname = txtfname.getText();
    String lname = txtlname.getText();
    SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
    
    String date = (txtdob.getDate() != null) ? df.format(txtdob.getDate()) : "";
    
    String gender = (String) txtgender.getSelectedItem();
    String address = txtaddress.getText();
    String mobile = txtmobile.getText();
    String discount = (String) txtsdiscount.getSelectedItem();
    String memfee = (String) txtmfee.getSelectedItem();
    String subs = (String) txtsubs.getSelectedItem();
    String trainer = (String) txttrainer.getSelectedItem();
    
    String start = (txtstart.getDate() != null) ? df.format(txtstart.getDate()) : "";
    
    String total = txttotal.getText();

    if (fname.isEmpty() || lname.isEmpty() || date.isEmpty() || gender.isEmpty() || address.isEmpty() || mobile.isEmpty() || discount.isEmpty()
            || memfee.isEmpty() || subs.isEmpty() || trainer.isEmpty() || start.isEmpty() || total.isEmpty()) {
        JOptionPane.showMessageDialog(this, "The fields are incomplete, please fill in all fields.", "Incomplete Fields", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        pst = con.prepareStatement("INSERT INTO member (fname, lname, dob, gender, address, mobile, discount, memfee, subs, tname, date, total) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
        pst.setString(1, fname);
        pst.setString(2, lname);
        pst.setString(3, date);
        pst.setString(4, gender);
        pst.setString(5, address);
        pst.setString(6, mobile);
        pst.setString(7, discount);
        pst.setString(8, memfee);
        pst.setString(9, subs);
        pst.setString(10, trainer);
        pst.setString(11, start);
        pst.setString(12, total);
        pst.executeUpdate();
        JOptionPane.showMessageDialog(this, "Member has been Added!");

        resetFields();
        loadTableData();

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error adding member: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        Logger.getLogger(Trainer.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
           // TODO add your handling code here:
    df = (DefaultTableModel) jTable1.getModel();
    int selected = jTable1.getSelectedRow();

    if (selected == -1) {
        JOptionPane.showMessageDialog(this, "Please select a member to edit.", "Selection Error", JOptionPane.WARNING_MESSAGE);
        return;
    }

    int id = Integer.parseInt(df.getValueAt(selected, 0).toString());

    String existingFname = df.getValueAt(selected, 1).toString();
    String existingLname = df.getValueAt(selected, 2).toString();
    String existingDate = df.getValueAt(selected, 3).toString(); 
    String existingGender = df.getValueAt(selected, 4).toString();
    String existingAddress = df.getValueAt(selected, 5).toString();
    String existingMobile = df.getValueAt(selected, 6).toString();
    String existingDiscount = df.getValueAt(selected, 7).toString();
    String existingMemfee = df.getValueAt(selected, 8).toString();
    String existingSubs = df.getValueAt(selected, 9).toString();
    String existingTrainer = df.getValueAt(selected, 10).toString();
    String existingStart = df.getValueAt(selected, 11).toString(); 
    String existingTotal = df.getValueAt(selected, 12).toString();

    String fname = txtfname.getText();
    String lname = txtlname.getText();
    SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
    String date = df.format(txtdob.getDate());
    String gender = (String) txtgender.getSelectedItem();
    String address = txtaddress.getText();
    String mobile = txtmobile.getText();
    String discount = (String) txtsdiscount.getSelectedItem();
    String memfee = (String) txtmfee.getSelectedItem();
    String subs = (String) txtsubs.getSelectedItem();
    String trainer = (String) txttrainer.getSelectedItem();
    String start = df.format(txtstart.getDate());
    String total = txttotal.getText();

    if (fname.equalsIgnoreCase(existingFname) &&
    lname.equalsIgnoreCase(existingLname) &&
    (date == null ? existingDate == null : date.equals(existingDate)) &&
    gender.equalsIgnoreCase(existingGender) &&
    address.equalsIgnoreCase(existingAddress) &&
    mobile.equalsIgnoreCase(existingMobile) &&
    discount.equalsIgnoreCase(existingDiscount) &&
    memfee.equalsIgnoreCase(existingMemfee) &&
    subs.equalsIgnoreCase(existingSubs) &&
    trainer.equalsIgnoreCase(existingTrainer) &&
    (start == null ? existingStart == null : start.equals(existingStart)) &&
    total.equalsIgnoreCase(existingTotal)) {
    JOptionPane.showMessageDialog(this, "No edits detected. Member details remain unchanged.", "No Changes Detected", JOptionPane.INFORMATION_MESSAGE);
    return;
}

    try {
        pst = con.prepareStatement("update member set fname = ?, lname = ?, dob = ?, gender = ?, address = ?, mobile = ?, discount = ?, memfee = ?, subs = ?, tname = ?, date = ?, total = ? where id = ?");
        pst.setString(1, fname);
        pst.setString(2, lname);
        pst.setString(3, date);
        pst.setString(4, gender);
        pst.setString(5, address);
        pst.setString(6, mobile);
        pst.setString(7, discount);
        pst.setString(8, memfee);
        pst.setString(9, subs);
        pst.setString(10, trainer);
        pst.setString(11, start);
        pst.setString(12, total);
        pst.setInt(13, id);
        pst.executeUpdate();
        JOptionPane.showMessageDialog(this, "Member has been Updated!");

        resetFields();
        loadTableData();
        txtstart.setEnabled(true);
        jButton2.setEnabled(true);
        txtmfee.setEnabled(true);
        txtsubs.setEnabled(true);

    } catch (SQLException ex) {
        Logger.getLogger(Members.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void setCurrentDate() {
    java.util.Date currentDate = new java.util.Date();
    txtstart.setDate(currentDate);
}
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       // TODO add your handling code here:
      df = (DefaultTableModel) jTable1.getModel();
        int selected = jTable1.getSelectedRow();
        
    if (selected == -1) {
       JOptionPane.showMessageDialog(this, "Fields are already empty.", "Empty Fields", JOptionPane.INFORMATION_MESSAGE);
        return;
    }
    
    resetFields();
    jButton2.setEnabled(true);
    txtmfee.setEnabled(true);
    txtsubs.setEnabled(true);    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       
        df = (DefaultTableModel) jTable1.getModel();
    int selected = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selected == -1) {
        JOptionPane.showMessageDialog(this, "Please select a trainer to delete.", "Selection Error", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
        resetFields();
      loadTableData();

        jButton2.setEnabled(true);
        txtmfee.setEnabled(true);
        txtsubs.setEnabled(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();

    Main mainForm = new Main();
    mainForm.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Members.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Members.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Members.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Members.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Members().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtaddress;
    private com.toedter.calendar.JDateChooser txtdob;
    private javax.swing.JTextField txtfname;
    private javax.swing.JLabel txtfnameinvalid;
    private javax.swing.JComboBox<String> txtgender;
    private javax.swing.JTextField txtlname;
    private javax.swing.JLabel txtlnameinvalid;
    private javax.swing.JTextField txtmamount;
    private javax.swing.JComboBox<String> txtmfee;
    private javax.swing.JTextField txtmobile;
    private javax.swing.JLabel txtmobileinvalid;
    private javax.swing.JTextField txtsamount;
    private javax.swing.JComboBox<String> txtsdiscount;
    private com.toedter.calendar.JDateChooser txtstart;
    private javax.swing.JComboBox<String> txtsubs;
    private javax.swing.JTextField txttamount;
    private javax.swing.JTextField txttotal;
    private javax.swing.JComboBox<String> txttrainer;
    // End of variables declaration//GEN-END:variables
}
